{
  "name": "@scaffold-eth/react-app",
  "version": "1.0.0",
  "homepage": ".",
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "dependencies": {
    "@ant-design/icons": "^4.2.2",
    "@apollo/react-hooks": "^4.0.0",
    "@0xproject/utils": "^0.7.3",
    "@buidlhub/buidlhub-ens-notifications": "^1.0.3",
    "@emotion/core": "^10.0.9",
    "@emotion/styled": "^10.0.9",
    "@myetherwallet/mewconnect-web-client": "^2.1.11",
    "@portis/web3": "^2.0.0-beta.59",
    "@toruslabs/torus-embed": "^1.8.6",
    "@ensdomains/address-encoder": "^0.2.6",
    "@ensdomains/mock": "^2.0.34",
    "@ensdomains/react-ens-address": "^0.0.27",
    "@ensdomains/ui": "^3.0.58",
    "@ethersproject/address": "^5.0.5",
    "@ethersproject/bignumber": "^5.0.8",
    "@ethersproject/bytes": "^5.0.5",
    "@ethersproject/contracts": "^5.0.5",
    "@ethersproject/providers": "^5.0.12",
    "@ethersproject/units": "^5.0.6",
    "@ramp-network/ramp-instant-sdk": "^2.2.0",
    "@testing-library/jest-dom": "^5.11.4",
    "@testing-library/react": "^11.1.0",
    "@testing-library/user-event": "^12.1.8",
    "@uniswap/sdk": "^3.0.3",
    "@walletconnect/web3-provider": "^1.3.1",
    "antd": "^4.7.0",
    "apollo-boost": "^0.4.9",
    "apollo-client": "^2.6.10",
    "apollo-utilities": "^1.3.4",
    "axios": "^0.20.0",
    "bnc-notify": "^1.5.0",
    "burner-provider": "^1.0.38",
    "dotenv": "^8.2.0",
    "eth-hooks": "^1.1.2",
    "graphiql": "^1.0.5",
    "graphql": "^15.3.0",
    "isomorphic-fetch": "^3.0.0",
    "qrcode.react": "^1.0.0",
    "react": "^16.14.0",
    "react-blockies": "^1.4.1",
    "react-dom": "^16.14.0",
    "react-qr-reader": "^2.2.1",
    "react-router-dom": "^5.2.0",
    "react-scripts": "^4.0.0",
    "apollo-cache-inmemory": "^1.2.9",
    "apollo-link": "^1.2.2",
    "apollo-link-http": "1.5.14",
    "apollo-link-state": "^0.4.1",
    "authereum": "^0.1.0",
    "big-integer": "^1.6.44",
    "chart.js": "^2.9.3",
    "core-js": "^3.1.4",
    "cross-fetch": "^2.2.3",
    "emotion": "^10.0.9",
    "esm": "^3.2.22",
    "eth-ens-namehash": "^2.0.8",
    "ethjs-unit": "^0.1.6",
    "ethval": "^1.3.0",
    "framer-motion": "^1.9.1",
    "graphql-tag": "2.9.1",
    "graphql-tools": "^2.23.1",
    "i18next": "^19.3.4",
    "i18next-xhr-backend": "^3.2.2",
    "ipfs-http-client": "^40.1.0",
    "js-sha3": "^0.8.0",
    "lodash": "^4.17.19",
    "moment": "^2.22.2",
    "notification-polyfill": "^1.0.0",
    "react-add-to-calendar-hoc": "^1.0.9",
    "react-apollo": "^3.0.0",
    "react-copy-to-clipboard": "^5.0.2",
    "react-ga": "^2.5.7",
    "react-i18next": "^11.3.4",
    "react-router": "5.1.2",
    "react-select": "^3.0.8",
    "react-tooltip": "^3.9.2",
    "react-transition-group-plus": "^0.5.3",
    "slugify": "^1.4.6",
    "stackdriver-errors-js": "^0.8.0",
    "web3modal": "^1.9.1",
    "web3": "^1.3.0"
  },
  "devDependencies": {
    "@testing-library/dom": "^6.12.2",
    "@types/react": "^16.9.19",
    "chalk": "^4.1.0",
    "eslint": "^7.5.0",
    "eslint-config-airbnb": "^18.2.0",
    "eslint-config-prettier": "^6.11.0",
    "eslint-plugin-babel": "^5.3.1",
    "eslint-plugin-prettier": "^3.1.4",
    "ipfs-http-client": "^45.0.0",
    "prettier": "^2.0.5",
    "s3-folder-upload": "^2.3.1",
    "surge": "^0.21.5",
    "apollo-client-mock": "0.0.8",
    "babel-plugin-macros": "^2.4.2",
    "cypress": "5.6.0",
    "cypress-pipe": "^1.5.0",
    "cypress-testing-library": "^2.3.4",
    "cypress-wait-until": "^1.3.0",
    "ganache-cli": "^6.9.1",
    "husky": "^2.2.0",
    "i18next-json-sync": "^2.3.1",
    "jest-localstorage-mock": "^2.4.0",
    "pretty-quick": "^1.10.0",
    "react-testing-library": "^3.0.2",
    "solc": "^0.4.23",
    "start-server-and-test": "^1.10.0"
  },
  "eslintConfig": {
    "extends": "react-app"
  },
  "scripts": {
    "_build": "react-scripts build",
    "_test": "react-scripts test",
    "build": "CI=false react-scripts --max_old_space_size=4096 build",
    "eject": "react-scripts eject",
    "start": "react-scripts start",
    "test": "react-scripts test --env=jsdom",
    "lint": "eslint --config ./.eslintrc.js --ignore-path ./.eslintignore ./src/**/*",
    "ipfs": "node ./scripts/ipfs.js",
    "surge": "surge ./build",
    "s3": "node ./scripts/s3.js",
    "ship": "yarn surge",

    "start:ipfs": "REACT_APP_IPFS=True PUBLIC_URL='.' yarn start",
    "start:test": "REACT_APP_STAGE=local yarn start",
    "start:test:ipfs": "REACT_APP_STAGE=local yarn start:ipfs",
    "build:ipfs": "REACT_APP_IPFS=True PUBLIC_URL='.' yarn build",
    "postbuild": "cp build/index.html build/200.html",
    "test:coverage": "npm test -- --coverage",
    "preTest": "node -r esm src/testing-utils/preTest.js",
    "preTest:dnssec": "node -r esm src/testing-utils/preTest.js default dnssec",
    "subgraph": "node scripts/subgraph.js",
    "advance": "node src/testing-utils/advance.js",
    "cypress:open": "yarn run cypress open",
    "cypress:open:ipfs": "yarn run cypress open --config-file cypress_ipfs.json",
    "cypress:record": "/bin/sh -c 'if [ -z ${CYPRESS_TOKEN+x} ]; then yarn run cypress run; else yarn run cypress run --record --key $CYPRESS_TOKEN; fi'",
    "cypress:record:ipfs": "/bin/sh -c 'if [ -z ${CYPRESS_TOKEN+x} ]; then yarn run cypress run --config-file cypress_ipfs.json; else yarn run cypress run --config-file cypress_ipfs.json --record --key $CYPRESS_TOKEN; fi'",
    "cypress:run-local": "yarn run cypress run",
    "cypress:run-local:ipfs": "yarn run cypress run --config-file cypress_ipfs.json",
    "cypress:run": "yarn preTest && start-server-and-test start:test http://localhost:3000 cypress:record",
    "cypress:run:ipfs": "yarn preTest && start-server-and-test start:test:ipfs http://localhost:3000 cypress:record:ipfs",
    "cypress:ci": "start-server-and-test start:test http://localhost:3000 cypress:record",
    "cypress:ci:ipfs": "/bin/sh -c 'if [ \"$TRAVIS_PULL_REQUEST\" = \"true\" ]; then yarn cypress:run:ipfs; else yarn cypress:run:ipfs; fi'",
    "deploy:dev": "npm run build && npm run postbuild && surge build ensappdev.surge.sh",
    "deploy": "npm run build && npm run postbuild && surge build app.ens.domains",
    "i18n": "sync-i18n --files 'public/locales/*.json' --primary en --languages cn --space 2",
    "check-i18n": "npm run i18n -- --check"
  }
}
